export ZSH="$HOME/.oh-my-zsh"
export HISTORY_IGNORE="(ls|cd|pwd|exit|history|cd -|cd ..)"

ZSH_THEME="michelebologna"

plugins=(
  git
  ssh-agent
  pass
  pip
  zsh-syntax-highlighting
  fast-syntax-highlighting
# zsh-autosuggestions
)

autoload -U tetris
autoload -U vcs_info

zle -N tetris
bindkey ^T tetris

setopt HIST_IGNORE_DUPS

source ~/.oh-my-zsh/catppuccin_mocha-zsh-syntax-highlighting.zsh
[[ -s "/etc/grc.zsh" ]] && source /etc/grc.zsh

export PATH=`go env GOPATH`/bin:$HOME/bin:$HOME/.local/bin:$HOME/.nix-profile/bin:$PATH
fpath=(
  ~/.zfuncs
  "${fpath[@]}"
)
# PFETCH: ascii title os host kernel uptime pkgs memory shell editor wm de palette
export PF_INFO="ascii title os host kernel wm shell memory palette"
export FETCH="pfetch"
export EDITOR="nvim"
export TERMINAL="alacritty"
export READER="zathura"
export SYSTEMD_EDITOR="$EDITOR"
export PAGER="less"
export BROWSER="chromium"
export MOST_INITFILE="$HOME/.config/most/mostrc"
export XDG_CONFIG_HOME="$HOME/.config"
export XDG_DATA_HOME="$HOME/.local/share"
export XDG_DATA_DIRS="$XDG_DATA_HOME/:/usr/local/share/:/usr/share/"
export NVM_DIR="$HOME/.config/nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
export OBSIDIAN_DIR="$HOME/Documents/obsidian"
export BAT_THEME="Catppuccin-mocha"
export GTK_THEME="Catppuccin-Mocha-Standart-Blue-Dark"
# --- Java envs ---
export _JAVA_OPTIONS='-Dawt.useSystemAAFontSettings=on'
export JAVA_FONTS=/usr/share/fonts/TTF
export _JAVA_AWT_WM_NONREPARENTING=1
___MY_VMOPTIONS_SHELL_FILE="${HOME}/.jetbrains.vmoptions.sh"; if [ -f "${___MY_VMOPTIONS_SHELL_FILE}" ]; then . "${___MY_VMOPTIONS_SHELL_FILE}"; fi
# --- FZF colors ---
export FZF_DEFAULT_OPTS=" \
--color=bg+:#313244,bg:#1e1e2e,spinner:#f5e0dc,hl:#f38ba8 \
--color=fg:#cdd6f4,header:#f38ba8,info:#cba6f7,pointer:#f5e0dc \
--color=marker:#f5e0dc,fg+:#cdd6f4,prompt:#cba6f7,hl+:#f38ba8"

source $ZSH/oh-my-zsh.sh
source $HOME/.aliases
source "$HOME/.cargo/env"
source /usr/share/doc/pkgfile/command-not-found.zsh

eval "$(zoxide init zsh)"

#------------------------------
# Window title
#------------------------------
case $TERM in
  termite|*xterm*|rxvt|rxvt-unicode|rxvt-256color|rxvt-unicode-256color|(dt|k|E)term)
    precmd () {
      vcs_info
      print -Pn "\e]0;[%n@%M][%~]%#\a"
    } 
    preexec () { print -Pn "\e]0;[%n@%M][%~]%# ($1)\a" }
    ;;
  screen|screen-256color)
    precmd () { 
      vcs_info
      print -Pn "\e]83;title \"$1\"\a" 
      print -Pn "\e]0;$TERM - (%L) [%n@%M]%# [%~]\a" 
    }
    preexec () { 
      print -Pn "\e]83;title \"$1\"\a" 
      print -Pn "\e]0;$TERM - (%L) [%n@%M]%# [%~] ($1)\a" 
    }
    ;; 
esac

# --- Functions --- TODO: куданибудь вынести
# Добавить заметку
addn() {
  sed -i '$d' ~/notes.txt && echo -e "$1\n" >> ~/notes.txt
}

cdUndoKey() {
  popd      > /dev/null
  zle       reset-prompt
  echo
  ls
  echo
}

cdParentKey() {
  pushd .. > /dev/null
  zle      reset-prompt
  echo
  ls
  echo
}

# --- Распаковка архивов ---
ex () {
 if [ -f $1 ] ; then
   case $1 in
     *.tar.bz2) tar xvjf $1   ;;
     *.tar.gz)  tar xvzf $1   ;;
     *.tar.xz)  tar xvfJ $1   ;;
     *.bz2)     bunzip2 $1    ;;
     *.rar)     unrar x $1    ;;
     *.gz)      gunzip $1     ;;
     *.tar)     tar xvf $1    ;;
     *.tbz2)    tar xvjf $1   ;;
     *.tgz)     tar xvzf $1   ;;
     *.zip)     unzip $1      ;;
     *.Z)       uncompress $1 ;;
     *.7z)      7z x $1       ;;
     *)         echo "'$1' Не может быть распакован при помощи >ex<" ;;
   esac
 else
   echo "'$1' не является допустимым файлом"
 fi
}

# --- Запаковка архивов ---
# pk tbz example example.tar.bz2
pk () {
  if [ $1 ] ; then
    case $1 in
      tbz)       tar cjvf $2.tar.bz2 $2      ;;
      tgz)       tar czvf $2.tar.gz  $2       ;;
      tar)      tar cpvf $2.tar  $2       ;;
      bz2)    bzip $2 ;;
      gz)        gzip -c -9 -n $2 > $2.gz ;;
      zip)       zip -r $2.zip $2   ;;
      7z)        7z a $2.7z $2    ;;
      *)         echo "'$1' не может быть упакован с помощью pk()" ;;
    esac
  else
    echo "'$1' не является допустимым файлом"
  fi
}

zle -N                 cdParentKey
zle -N                 cdUndoKey
bindkey '^[[1;3A'      cdParentKey
bindkey '^[[1;3D'      cdUndoKey

#cat ~/notes.txt

# The next line updates PATH for Yandex Cloud CLI.
if [ -f '/home/pzlm/yandex-cloud/path.bash.inc' ]; then source '/home/pzlm/yandex-cloud/path.bash.inc'; fi

# The next line enables shell command completion for yc.
if [ -f '/home/pzlm/yandex-cloud/completion.zsh.inc' ]; then source '/home/pzlm/yandex-cloud/completion.zsh.inc'; fi


# >>> conda initialize >>>
# !! Contents within this block are managed by 'conda init' !!
__conda_setup="$('/usr/bin/conda' 'shell.zsh' 'hook' 2> /dev/null)"
if [ $? -eq 0 ]; then
    eval "$__conda_setup"
else
    if [ -f "/usr/etc/profile.d/conda.sh" ]; then
        . "/usr/etc/profile.d/conda.sh"
    else
        export PATH="/usr/bin:$PATH"
    fi
fi
unset __conda_setup
# <<< conda initialize <<<

